Instruktioner för att hämta data (as of 21 mars 2023):



1. Kör FindRevertChangesets.py. Den kollar igenom en hel changeset-dump och hittar kommentarer som har "revert" i sig
som ska vara efter "changeset" || "chgset" || "cs" och plockar dessutom när dessa revertade changesets skapades.
Input: Changeset history file, t.ex. '/Users/dansvenonius/Desktop/changesets-230227.osm.bz2'.
Output: CSV med kolonner för 'revert_cs_id', 'revert_created_at', 'comment', 'reverted_id', 'reverted_created_at'
i '/Users/dansvenonius/Desktop/Misc output/reverted_changesets.csv'

1.5 Alternativt körs FindFalseLabelChangesets.py, för att hitta data som inte har blivit revertade. Resterande steg
är däremot samma.
Input: Changeset history file, t.ex. '/Users/dansvenonius/Desktop/changesets-230227.osm.bz2'. Tar även revertade cs_id
för att se vad vilka CS vi ej ska sampla, från filen '/Users/dansvenonius/Desktop/Misc output/Reverted Data/reverted_changesets.csv'
Output: CSV med kolonner för 'cs_id' och 'created_at' i /Users/dansvenonius/Desktop/Misc output/Not Reverted Data/false_label_changesets.csv'




2. Kör Preprocessing.py. Den använder Main API för att hämta ut innehållet i changesetet. Det innebär att den kollar på
dels metadatan och de skapade/modifierade/borttagna elementen, och dessutom sorterar element som changesetet skapade
(som vi har full information om gällande tags, osv) och element som modifierades/deletades, som vi måste jobba mer med.
Den outputtar dessutom User data och bad_uids, som är uids som gav upphov till något error och som vi kastar bort.
Input: Outputen från tidigare steg, '/Users/dansvenonius/Desktop/Misc output/Reverted Data/reverted_changesets.csv'.
Finns även för icke-revertade i '/Users/dansvenonius/Desktop/Misc output/Not Reverted Data/false_label_changesets.csv'.
Behöver bara ids från dessa.
Output: En himla massa. Changeset-datan, elementen som ingår i alla dessa changesets. Lite user-data som ska processas vidare.
Beroende på om reverted inte reverted blir pathen: '/Users/dansvenonius/Desktop/Preprocessing output/Reverted Data/'
eller '/Users/dansvenonius/Desktop/Preprocessing output/Not Reverted Data/' följt av changeset_data.csv, user_data.csv
node_data.csv, way_data.csv, relation_data.csv, node_create_data.csv, way_create_data.csv, relation_create_data.csv, bad_uids.csv.




3. Kör GetAccCreationDate.py. Den plockar ut när accountet skapades för de relevanta user idsen. Denna kan även köras
senare.
Input: '/Users/dansvenonius/Desktop/Preprocessing output/Reverted Data/user_data.csv' för att få uids. Finns även i
'/Users/dansvenonius/Desktop/Preprocessing output/Not Reverted Data/user_data.csv'.
Output: Lägger till en kolonn med acc_created i samma fil.




4. Kör IdsToTxtFile.py för att få filen vi sedan kan inputta till osmiums CLI-verktyg.
Input: path '/Users/dansvenonius/Desktop/Preprocessing output/Reverted Data/' (alt för Not Reverted Data), för att sedan
hämta node, way och relation härifrån.
Output: En text-fil '/Users/dansvenonius/Desktop/Misc output/Reverted Data/CLI_element_ids_for_history.txt' (alt. för Not Reverted Data)
med ids som kan gå in i CLI-kommandot för att filtrera fram element.





5. Kör osmiums CLI-verktyg för att plocka ut alla de element (nodes/ways/relations) som vi sedan måste jämföra med
dess tidigare iterationer. Ett kommando (callat från desktop) som har funkat är:
osmium getid ./history-230227.osm.pbf --id-file ./Misc\ output/Not\ Reverted\ Data/CLI_element_ids_for_history.txt --with-history -o ./Misc\ output/Not\ Reverted\ Data/relevant_reverted_elements.osm.pbf
Input: History-filen, '/Users/dansvenonius/Desktop/history-230227.osm.pbf',
ids från '/Users/dansvenonius/Desktop/Misc output/Reverted Data/CLI_element_ids_for_history.txt' (alt. Not Reverted Data)
Output: Element som någon av våra användare har rört, '/Users/dansvenonius/Desktop/Misc output/Reverted Data/relevant_reverted_elements.osm.pbf'




6. Kör GetElementHistory.py på filen som steg 5 outputtade. Den kör igenom dessa element och tittar på tidigare iterationer
för att få kontext på objektets historia, men framförallt kollar på föreågende version av elementet.
Input: Filtrerade history-filen. '/Users/dansvenonius/Desktop/Misc output/Reverted Data/relevant_reverted_elements.osm.pbf'
Output: Elementen som inte var created i changesetet, och deras history, framförallt jämförelse med föregående iteration,
från '/Users/dansvenonius/Desktop/History output/Reverted Data/elements_modifydelete_data.csv'. IDs för element vars tidigare
iteration inte hittades i OSM kastas bort och deras ID samt typer läggs i
'/Users/dansvenonius/Desktop/History output/Reverted Data/bad_elements_data.csv' (alt. Not Reverted Data)





7. Kör FindUserChangesetData.py som plockar ut nprev_changesets och active_weeks för alla changesets. Anledningen till
att vi delar upp det på changesets och inte användare är för att samma användare kan komma upp flera gånger, och har ju
då olika historik vi två olika tillfällen.
Input: Changeset history-fil '/Users/dansvenonius/Desktop/changesets-230227.osm.bz2'.
Output: '/Users/dansvenonius/Desktop/Preprocessing output/Reverted Data/user_data.csv' (alt Not Reverted Data). Denna skriver
över nuvarande user_data-fil och lägger till kolonner för 'nprev_changesets' och 'active_weeks'.





8. Kör GetElementFromUids.py. Denna tittar på användarens historia och kollar hur många creates, modifications och deletes
de hade innan de gjorde changesetet. Därför delas även denna upp på changesets och inte på användaren. Denna outputtar även
en stor textfil med alla element-ids som de användarna vi är intresserade av har rört.
Input: Stora history-filen '/Users/dansvenonius/Desktop/history-230227.osm.pbf'.
Output: En CSV-fil där vi lägger till hur många operationer (create/modify/delete/contributions) som har gjorts av använder
upp till skapandet av changesetet. Dessa läggs i '/Users/dansvenonius/Desktop/History output/Reverted Data/user_data_w_operations.csv',
och skriver alltså inte över user_data i Preprocessing output. Dessutom outputtar denna en text-fil
'/Users/dansvenonius/Desktop/History output/Reverted Data/CLI_element_ids_for_nkeywords.txt' som ska användas för att filtrera
fram alla element som våra användare har rört. (alt för Not Reverted Data)





9. OBS! Detta behöver bara köras en gång. Sedan kan filen återanvändas. Kör osmiums CLI-verktyg för att filtrera på tags.
Följande kommando plockar ut alla nodes, ways och relations som har minst ett av våra 12 keywords. Ett kommando som funkat är:
osmium tags-filter ./history-230227.osm.pbf nwr/building nwr/source nwr/highway nwr/name nwr/natural nwr/surface nwr/landuse nwr/power nwr/waterway nwr/amenity nwr/service nwr/oneway -o ./tag_filtered_history.osm.pbf --progress --omit-referenced
Input: OSM history-fil, '/Users/dansvenonius/Desktop/history-230227.osm.pbf'
Output: OSM history-fil, bara med versioner som har minst en av dessa taggar i sig: '/Users/dansvenonius/Desktop/tag_filtered_history.osm.pbf'





10. Kör osmiums CLI-verktyg igen, för att plocka ut nya element, som är alla dem element som har rörts av minst en av
de användare vi är intresserade av. Ett kommando som har funkat är:
osmium getid ./tag_filtered_history.osm.pbf --id-file ./History\ output/Reverted\ Data/CLI_element_ids_for_nkeywords.txt --with-history -o ./Misc\ output/Reverted\ Data/elements_touched_by_users_and_tags_filtered.osm.pbf
Input: Text-fil för filtrering, '/Users/dansvenonius/Desktop/History output/Reverted Data/CLI_element_ids_for_nkeywords.txt'
samt stora tag-filtrerade history-filen '/Users/dansvenonius/Desktop/tag_filtered_history.osm.pbf'.
Output: Filtrerad history-fil, med element med rätt tags och som rörts av relevanta användare,
'/Users/dansvenonius/Desktop/Misc output/Reverted Data/elements_touched_by_users_and_tags_filtered.osm.pbf'





11. Med outputten från steg 10, kör GetNkeywords.py. Den plockar ut alla gånger en användare för ett changeset har
använt någon av de 12 vanligaste taggarna (nycklarna alltså) i OSM, alltså ett mått på hur mycket OSM-convention som
används. Detta är det sista steget där vi hämtar data.
Input: Filtrerad history med alla element som rörts av minst en användare vi är intresserade av,
'/Users/dansvenonius/Desktop/Misc output/Reverted Data/elements_touched_by_users.osm.pbf' (alt Not Reverted Data)
Output: En ny CSV-fil med ifylld kolonn för nkeywords i
'/Users/dansvenonius/Desktop/History output/Reverted Data/user_data_final.csv' (alt Not Reverted Data)




12. Eventuellt kombinera olika CSV-filer.




13. När båda dataseten är klappade och klara, skapa en stor CSV-fil med två kolonner för dels changeset_id och dels
true/false label.